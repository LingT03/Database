{"t":{"$date":"2023-05-02T16:46:24.563Z"},"s":"I","c":"MONGOSH","id":1000000000,"ctx":"log","msg":"Starting log","attr":{"execPath":"/usr/bin/mongosh","envInfo":{"EDITOR":null,"NODE_OPTIONS":null,"TERM":"xterm"},"version":"1.8.0","distributionKind":"compiled","buildArch":"arm64","buildPlatform":"linux","buildTarget":"linux-arm64","buildTime":"2023-02-28T13:52:16.830Z","gitVersion":"9cf53bc336c79e505cf034bf5e6f3b3b3796cf25","nodeVersion":"v16.19.1","opensslVersion":"1.1.1t+quic","sharedOpenssl":false}}
{"t":{"$date":"2023-05-02T16:46:24.567Z"},"s":"I","c":"MONGOSH","id":1000000005,"ctx":"config","msg":"User updated"}
{"t":{"$date":"2023-05-02T16:46:24.578Z"},"s":"I","c":"MONGOSH","id":1000000048,"ctx":"config","msg":"Loading global configuration file","attr":{"filename":"/etc/mongosh.conf","found":false}}
{"t":{"$date":"2023-05-02T16:46:24.580Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000042,"ctx":"mongosh-connect","msg":"Initiating connection attempt","attr":{"uri":"mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.8.0","driver":{"name":"nodejs|mongosh","version":"5.1.0"},"devtoolsConnectVersion":"1.4.4","host":"127.0.0.1:27017"}}
{"t":{"$date":"2023-05-02T16:46:24.588Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000035,"ctx":"mongosh-connect","msg":"Server heartbeat succeeded","attr":{"connectionId":"127.0.0.1:27017"}}
{"t":{"$date":"2023-05-02T16:46:24.591Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000037,"ctx":"mongosh-connect","msg":"Connection attempt finished"}
{"t":{"$date":"2023-05-02T16:46:24.599Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"64513e60ad938d2fbaa8b5c4","userId":null,"telemetryAnonymousId":"644810ad49b4ae8896a84695","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.8.0","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"6.0.5","node_version":"v16.19.1","mongosh_version":"1.8.0","server_os":"linux","server_arch":"aarch64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","fcv":"6.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2023-05-02T16:46:24.601Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"ping":1}}}}
{"t":{"$date":"2023-05-02T16:46:24.602Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2023-05-02T16:46:24.635Z"},"s":"I","c":"MONGOSH","id":1000000010,"ctx":"shell-api","msg":"Initialized context","attr":{"method":"setCtx","arguments":{}}}
{"t":{"$date":"2023-05-02T16:46:24.637Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show startupWarnings"}}
{"t":{"$date":"2023-05-02T16:46:24.638Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"getLog":"startupWarnings"}}}}
{"t":{"$date":"2023-05-02T16:46:24.639Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2023-05-02T16:46:24.639Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show freeMonitoring"}}
{"t":{"$date":"2023-05-02T16:46:24.640Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"getFreeMonitoringStatus":1}}}}
{"t":{"$date":"2023-05-02T16:46:24.641Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2023-05-02T16:46:24.642Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show automationNotices"}}
{"t":{"$date":"2023-05-02T16:46:24.642Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"hello","class":"Database","db":"test","arguments":{}}}
{"t":{"$date":"2023-05-02T16:46:24.643Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show nonGenuineMongoDBCheck"}}
{"t":{"$date":"2023-05-02T16:46:24.643Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000024,"ctx":"snippets","msg":"Fetching snippet index","attr":{"refreshMode":"allow-cached"}}
{"t":{"$date":"2023-05-02T16:46:24.645Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000019,"ctx":"snippets","msg":"Loaded snippets","attr":{"installdir":"/data/db/.mongodb/mongosh/snippets"}}
{"t":{"$date":"2023-05-02T16:46:24.646Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000027,"ctx":"snippets","msg":"Fetching snippet index done"}
{"t":{"$date":"2023-05-02T16:46:24.649Z"},"s":"I","c":"MONGOSH","id":1000000002,"ctx":"repl","msg":"Started REPL","attr":{"version":"1.8.0"}}
{"t":{"$date":"2023-05-02T16:46:28.285Z"},"s":"I","c":"MONGOSH","id":1000000008,"ctx":"shell-api","msg":"Used \"use\" command","attr":{"db":"students"}}
{"t":{"$date":"2023-05-02T16:46:28.313Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"64513e60ad938d2fbaa8b5c4","userId":null,"telemetryAnonymousId":"644810ad49b4ae8896a84695","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.8.0","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"6.0.5","node_version":"v16.19.1","mongosh_version":"1.8.0","server_os":"linux","server_arch":"aarch64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","fcv":"6.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2023-05-02T16:46:48.271Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.majors.insert({\n  _id: \"CS\",\n  description: \"Computer Science\",\n});"}}
{"t":{"$date":"2023-05-02T16:46:48.320Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"students","coll":"majors","arguments":{"options":{}}}}
{"t":{"$date":"2023-05-02T16:46:48.363Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"insert"}}
{"t":{"$date":"2023-05-02T16:48:13.837Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.majors.insert({\n  _id: \"CS\",\n  description: \"Computer Science\",\n});"}}
{"t":{"$date":"2023-05-02T16:48:13.842Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"students","coll":"majors","arguments":{"options":{}}}}
{"t":{"$date":"2023-05-02T16:48:13.849Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"insert"}}
{"t":{"$date":"2023-05-02T16:48:13.852Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoBulkWriteError: E11000 duplicate key error collection: students.majors index: _id_ dup key: { _id: \"CS\" }","attr":{"code":11000,"writeErrors":[{"err":{"index":0,"code":11000,"errmsg":"E11000 duplicate key error collection: students.majors index: _id_ dup key: { _id: \"CS\" }","errInfo":null,"op":{"_id":"CS","description":"Computer Science"}}}],"result":{"insertedCount":0,"matchedCount":0,"modifiedCount":0,"deletedCount":0,"upsertedCount":0,"upsertedIds":{},"insertedIds":{"0":"CS"}},"message":"E11000 duplicate key error collection: students.majors index: _id_ dup key: { _id: \"CS\" }","name":"MongoBulkWriteError","stack":"MongoBulkWriteError: E11000 duplicate key error collection: students.majors index: _id_ dup key: { _id: \"CS\" }\n    at OrderedBulkOperation.handleWriteError (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1218515)\n    at l (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1210054)\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1508806\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}}
{"t":{"$date":"2023-05-02T16:48:32.822Z"},"s":"I","c":"MONGOSH","id":1000000008,"ctx":"shell-api","msg":"Used \"use\" command","attr":{"db":"majors"}}
{"t":{"$date":"2023-05-02T16:48:32.845Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"64513e60ad938d2fbaa8b5c4","userId":null,"telemetryAnonymousId":"644810ad49b4ae8896a84695","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.8.0","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"6.0.5","node_version":"v16.19.1","mongosh_version":"1.8.0","server_os":"linux","server_arch":"aarch64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","fcv":"6.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2023-05-02T16:48:39.944Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.majors.insert({\n  _id: \"CS\",\n  description: \"Computer Science\",\n});"}}
{"t":{"$date":"2023-05-02T16:48:39.950Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"majors","coll":"majors","arguments":{"options":{}}}}
{"t":{"$date":"2023-05-02T16:48:39.967Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"insert"}}
{"t":{"$date":"2023-05-02T16:48:45.129Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.majors.insert({\n  _id: \"BIOL\",\n  description: \"Biology\",\n});"}}
{"t":{"$date":"2023-05-02T16:48:45.133Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"majors","coll":"majors","arguments":{"options":{}}}}
{"t":{"$date":"2023-05-02T16:48:45.140Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"insert"}}
{"t":{"$date":"2023-05-02T16:48:49.951Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.majors.insert({\n  _id: \"POSC\",\n  description: \"Political Science\",\n});"}}
{"t":{"$date":"2023-05-02T16:48:49.957Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"majors","coll":"majors","arguments":{"options":{}}}}
{"t":{"$date":"2023-05-02T16:48:49.961Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"insert"}}
{"t":{"$date":"2023-05-02T16:48:55.223Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.insert({\n  _id: 1,\n  name: \"Stephanie Schultz\",\n  majors: [\"CS\"],\n});"}}
{"t":{"$date":"2023-05-02T16:48:55.230Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"majors","coll":"students","arguments":{"options":{}}}}
{"t":{"$date":"2023-05-02T16:48:55.247Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"insert"}}
{"t":{"$date":"2023-05-02T16:49:01.544Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.insert({\n  _id: 2,\n  name: \"Phillip Thomas\",\n  majors: [\"BIOL\"],\n});"}}
{"t":{"$date":"2023-05-02T16:49:01.550Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"majors","coll":"students","arguments":{"options":{}}}}
{"t":{"$date":"2023-05-02T16:49:01.554Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"insert"}}
{"t":{"$date":"2023-05-02T16:49:06.503Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.insert({\n  _id: 3,\n  name: \"Christopher Smith\",\n  majors: [\"BIOL\"],\n});"}}
{"t":{"$date":"2023-05-02T16:49:06.508Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"majors","coll":"students","arguments":{"options":{}}}}
{"t":{"$date":"2023-05-02T16:49:06.512Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"insert"}}
{"t":{"$date":"2023-05-02T16:49:11.489Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.insert({\n  _id: 4,\n  name: \"Megan Marshall\",\n  majors: [\"POSC\", \"CS\"],\n});"}}
{"t":{"$date":"2023-05-02T16:49:11.495Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"majors","coll":"students","arguments":{"options":{}}}}
{"t":{"$date":"2023-05-02T16:49:11.501Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"insert"}}
{"t":{"$date":"2023-05-02T16:49:15.368Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.insert({\n  _id: 5,\n  name: \"Michael Morales Jr.\",\n  majors: [\"POSC\"],\n});"}}
{"t":{"$date":"2023-05-02T16:49:15.374Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insert","class":"Collection","db":"majors","coll":"students","arguments":{"options":{}}}}
{"t":{"$date":"2023-05-02T16:49:15.379Z"},"s":"W","c":"MONGOSH","id":1000000033,"ctx":"shell-api","msg":"Deprecated API call","attr":{"class":"Collection","method":"insert"}}
{"t":{"$date":"2023-05-02T16:55:09.176Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.majors.aggregate([\n  {\n    $unwind: \"$majors\",\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T16:55:09.183Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"majors","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}}]}}}
{"t":{"$date":"2023-05-02T16:55:34.406Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"POSC"}}
{"t":{"$date":"2023-05-02T16:55:34.412Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: POSC is not defined","attr":{"message":"POSC is not defined","name":"ReferenceError","stack":"ReferenceError: POSC is not defined\n    at REPL62:34:9\n    at REPL62:48:5\n    at REPL62:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799948\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799676\n    at node:internal/util:364:7"}}
{"t":{"$date":"2023-05-02T16:57:09.119Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\",\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T16:57:09.124Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}}]}}}
{"t":{"$date":"2023-05-02T16:59:41.698Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\",\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      id : false,\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T16:59:41.704Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","id":false,"localField":"majors","foreignField":"_id","as":"majors_detail"}}]}}}
{"t":{"$date":"2023-05-02T16:59:41.715Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: $lookup argument 'id' must be a string, found id: false: bool","attr":{"ok":0,"code":9,"codeName":"FailedToParse","message":"$lookup argument 'id' must be a string, found id: false: bool","name":"MongoServerError","stack":"MongoServerError: $lookup argument 'id' must be a string, found id: false: bool\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1267623)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1265503)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at p (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1287145)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1285766)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)"}}
{"t":{"$date":"2023-05-02T16:59:50.659Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\",\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      _id : false,\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T16:59:50.665Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","_id":false,"localField":"majors","foreignField":"_id","as":"majors_detail"}}]}}}
{"t":{"$date":"2023-05-02T16:59:50.674Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: $lookup argument '_id' must be a string, found _id: false: bool","attr":{"ok":0,"code":9,"codeName":"FailedToParse","message":"$lookup argument '_id' must be a string, found _id: false: bool","name":"MongoServerError","stack":"MongoServerError: $lookup argument '_id' must be a string, found _id: false: bool\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1267623)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1265503)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at p (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1287145)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1285766)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)"}}
{"t":{"$date":"2023-05-02T17:00:07.462Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\",\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:00:07.466Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}}]}}}
{"t":{"$date":"2023-05-02T17:02:19.698Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n    {\n      $unwind: \"$majors\", // unwind to get one major per document\n    },\n    {\n      $lookup: {\n        from: \"majors\",\n        localField: \"majors\",\n        foreignField: \"_id\",\n        as: \"majors_detail\",\n      },\n    },\n    {\n        $unwind: \"$majors_detail\",\n    },\n  ]);"}}
{"t":{"$date":"2023-05-02T17:02:19.702Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"}]}}}
{"t":{"$date":"2023-05-02T17:02:34.088Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\", // unwind to get one major per document\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:02:34.093Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}}]}}}
{"t":{"$date":"2023-05-02T17:02:44.026Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([ { $unwind: \"$majors\" /* unwind to get one major per document*/ }, { $lookup: { from: \"majors\", localField: \"majors\", foreignField: \"_id\", as: \"majors_detail\" } }]);"}}
{"t":{"$date":"2023-05-02T17:02:44.032Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}}]}}}
{"t":{"$date":"2023-05-02T17:02:53.151Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([ { $unwind: \"$majors\" /* unwind to get one major per document*/ }, { $lookup: { from: \"majors\", localField: \"majors\", foreignField: \"_id\", as: \"majors_detail\" } }, { $unwind: \"$majors_detail\" }]);"}}
{"t":{"$date":"2023-05-02T17:02:53.157Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"}]}}}
{"t":{"$date":"2023-05-02T17:02:55.576Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([ { $unwind: \"$majors\" /* unwind to get one major per document*/ }, { $lookup: { from: \"majors\", localField: \"majors\", foreignField: \"_id\", as: \"majors_detail\" } }]);"}}
{"t":{"$date":"2023-05-02T17:02:55.584Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}}]}}}
{"t":{"$date":"2023-05-02T17:04:49.203Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n    {\n        $unwind: \"$majors\", // unwind to get one major per document\n      },\n      {\n        $lookup: {\n          from: \"majors\",\n          localField: \"majors\",\n          foreignField: \"_id\",\n          as: \"majors_detail\",\n        },\n      },\n      {\n          $unwind: \"$majors_detail\", \n      },\n    {\n        $push: \"$majors_detail.description\",\n    },\n]);"}}
{"t":{"$date":"2023-05-02T17:04:49.210Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$push":"$majors_detail.description"}]}}}
{"t":{"$date":"2023-05-02T17:04:49.220Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: Unrecognized pipeline stage name: '$push'","attr":{"ok":0,"code":40324,"codeName":"Location40324","message":"Unrecognized pipeline stage name: '$push'","name":"MongoServerError","stack":"MongoServerError: Unrecognized pipeline stage name: '$push'\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1267623)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1265503)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at p (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1287145)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1285766)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)"}}
{"t":{"$date":"2023-05-02T17:05:36.178Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\", // unwind to get one major per document\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n  {\n    $unwind: \"$majors_detail\",\n  },\n  {\n    $group: {\n      _id: \"$_id\",\n      name: { $first: \"$name\" },\n      majors: { $push: \"$majors_detail\" },\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:05:36.182Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$group":{"_id":"$_id","name":{"$first":"$name"},"majors":{"$push":"$majors_detail"}}}]}}}
{"t":{"$date":"2023-05-02T17:06:11.802Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\", // unwind to get one major per document\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n  {\n    $unwind: \"$majors_detail\",\n  },\n  {\n    $group: {\n      Studies: \"$_id\",\n      name: { $first: \"$name\" },\n      majors: { $push: \"$majors_detail\" },\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:06:11.808Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$group":{"Studies":"$_id","name":{"$first":"$name"},"majors":{"$push":"$majors_detail"}}}]}}}
{"t":{"$date":"2023-05-02T17:06:11.816Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: The field 'Studies' must be an accumulator object","attr":{"ok":0,"code":40234,"codeName":"Location40234","message":"The field 'Studies' must be an accumulator object","name":"MongoServerError","stack":"MongoServerError: The field 'Studies' must be an accumulator object\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1267623)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1265503)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at p (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1287145)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1285766)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)"}}
{"t":{"$date":"2023-05-02T17:06:25.479Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\", // unwind to get one major per document\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n  {\n    $unwind: \"$majors_detail\",\n  },\n  {\n    $group: {\n      major: \"$_id\",\n      name: { $first: \"$name\" },\n      majors: { $push: \"$majors_detail\" },\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:06:25.483Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$group":{"major":"$_id","name":{"$first":"$name"},"majors":{"$push":"$majors_detail"}}}]}}}
{"t":{"$date":"2023-05-02T17:06:25.492Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: The field 'major' must be an accumulator object","attr":{"ok":0,"code":40234,"codeName":"Location40234","message":"The field 'major' must be an accumulator object","name":"MongoServerError","stack":"MongoServerError: The field 'major' must be an accumulator object\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1267623)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1265503)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at p (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1287145)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1285766)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)"}}
{"t":{"$date":"2023-05-02T17:06:40.326Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\", // unwind to get one major per document\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n  {\n    $unwind: \"$majors_detail\",\n  },\n  {\n    $group: {\n      majors: \"$_id\",\n      name: { $first: \"$name\" },\n      majors: { $push: \"$majors_detail\" },\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:06:40.331Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$group":{"majors":{"$push":"$majors_detail"},"name":{"$first":"$name"}}}]}}}
{"t":{"$date":"2023-05-02T17:06:40.340Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: a group specification must include an _id","attr":{"ok":0,"code":15955,"codeName":"Location15955","message":"a group specification must include an _id","name":"MongoServerError","stack":"MongoServerError: a group specification must include an _id\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1267623)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1265503)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at p (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1287145)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1285766)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)"}}
{"t":{"$date":"2023-05-02T17:06:55.294Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\", // unwind to get one major per document\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n  {\n    $unwind: \"$majors_detail\",\n  },\n  {\n    $group: {\n      _id: \"$_id\",\n      name: { $first: \"$name\" },\n      majors: { $push: \"$majors_detail\" },\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:06:55.299Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$group":{"_id":"$_id","name":{"$first":"$name"},"majors":{"$push":"$majors_detail"}}}]}}}
{"t":{"$date":"2023-05-02T17:08:39.852Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n    {\n        $unwind: \"$majors\", // unwind to get one major per document\n      },\n      {\n        $lookup: {\n          from: \"majors\",\n          localField: \"majors\",\n          foreignField: \"_id\",\n          as: \"majors_detail\",\n        },\n      },\n      {\n          $unwind: \"$majors_detail\", \n      },\n    {\n        $group: {\n            _id: \"$_id\",\n            name: { $first: \"$name\" },\n            majors: { $push: \"$majors_detail\" },\n        },\n    },\n]);"}}
{"t":{"$date":"2023-05-02T17:08:39.856Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$group":{"_id":"$_id","name":{"$first":"$name"},"majors":{"$push":"$majors_detail"}}}]}}}
{"t":{"$date":"2023-05-02T17:14:51.062Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\", // unwind to get one major per document\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n  {\n    $unwind: \"$majors_detail\", // unwind to get one major per document\n  },\n  {\n    $group: {\n      _id: \"$_id\",\n      name: { $first: \"$name\" },\n      majors: { $push: \"$majors_detail\" }, // pused major_detail into major associated with a student\n    },\n  },\n\n  {\n    $project: {\n      _id: 1,\n      name: 1,\n      majors: 1,\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:14:51.069Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$group":{"_id":"$_id","name":{"$first":"$name"},"majors":{"$push":"$majors_detail"}}},{"$project":{"_id":1,"name":1,"majors":1}}]}}}
{"t":{"$date":"2023-05-02T17:14:51.276Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":""}}
{"t":{"$date":"2023-05-02T17:14:53.972Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\", // unwind to get one major per document\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n  {\n    $unwind: \"$majors_detail\", // unwind to get one major per document\n  },\n  {\n    $group: {\n      _id: \"$_id\",\n      name: { $first: \"$name\" },\n      majors: { $push: \"$majors_detail\" }, // pused major_detail into major associated with a student\n    },\n  },\n\n  {\n    $project: {\n      _id: 1,\n      name: 1,\n      majors: 1,\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:14:53.974Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$group":{"_id":"$_id","name":{"$first":"$name"},"majors":{"$push":"$majors_detail"}}},{"$project":{"_id":1,"name":1,"majors":1}}]}}}
{"t":{"$date":"2023-05-02T17:14:54.901Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":""}}
{"t":{"$date":"2023-05-02T17:15:13.679Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\", // unwind to get one major per document\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n  {\n    $unwind: \"$majors_detail\", // unwind to get one major per document\n  },\n  {\n    $group: {\n      _id: \"$_id\",\n      name: { $first: \"$name\" },\n      majors: { $push: \"$majors_detail\" }, // pused major_detail into major associated with a student\n    },\n  },\n\n  {\n    $project: {\n      _id: 1,\n      name: 1,\n      majors: 1,\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:15:13.685Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$group":{"_id":"$_id","name":{"$first":"$name"},"majors":{"$push":"$majors_detail"}}},{"$project":{"_id":1,"name":1,"majors":1}}]}}}
{"t":{"$date":"2023-05-02T17:16:02.366Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\", // unwind to get one major per document\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n  {\n    $unwind: \"$majors_detail\", // unwind to get one major per document\n  },\n  {\n    $group: {\n      _id: \"$_id\",\n      name: { $first: \"$name\" },\n      majors: { $push: \"$majors_detail\" }, // pused major_detail into major associated with a student\n    },\n  },\n\n  {\n    $project: {\n      _id: 1,\n      name: 1,\n      majors: 1,\n    },\n\n    $sort: {\n        _id: 1,\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:16:02.372Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$group":{"_id":"$_id","name":{"$first":"$name"},"majors":{"$push":"$majors_detail"}}},{"$project":{"_id":1,"name":1,"majors":1},"$sort":{"_id":1}}]}}}
{"t":{"$date":"2023-05-02T17:16:02.381Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: A pipeline stage specification object must contain exactly one field.","attr":{"ok":0,"code":40323,"codeName":"Location40323","message":"A pipeline stage specification object must contain exactly one field.","name":"MongoServerError","stack":"MongoServerError: A pipeline stage specification object must contain exactly one field.\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1267623)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1265503)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at p (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1287145)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1285766)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)"}}
{"t":{"$date":"2023-05-02T17:16:35.358Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\", // unwind to get one major per document\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n  {\n    $unwind: \"$majors_detail\", // unwind to get one major per document\n  },\n  {\n    $group: {\n      _id: \"$_id\",\n      name: { $first: \"$name\" },\n      majors: { $push: \"$majors_detail\" }, // pused major_detail into major associated with a student\n    },\n  },\n\n  {\n    $project: {\n      _id: 1,\n      name: 1,\n      majors: 1,\n      $sort: {\n        _id: 1,\n      },\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:16:35.363Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$group":{"_id":"$_id","name":{"$first":"$name"},"majors":{"$push":"$majors_detail"}}},{"$project":{"_id":1,"name":1,"majors":1,"$sort":{"_id":1}}}]}}}
{"t":{"$date":"2023-05-02T17:16:35.376Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","attr":{"ok":0,"code":16410,"codeName":"Location16410","message":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","name":"MongoServerError","stack":"MongoServerError: Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.\n    at Connection.onMessage (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1267623)\n    at MessageStream.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1265503)\n    at MessageStream.emit (node:events:513:28)\n    at MessageStream.emit (node:domain:489:12)\n    at p (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1287145)\n    at MessageStream._write (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1285766)\n    at writeOrBuffer (node:internal/streams/writable:391:12)\n    at _write (node:internal/streams/writable:332:10)\n    at MessageStream.Writable.write (node:internal/streams/writable:336:10)\n    at Socket.ondata (node:internal/streams/readable:754:22)"}}
{"t":{"$date":"2023-05-02T17:17:04.876Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.students.aggregate([\n  {\n    $unwind: \"$majors\", // unwind to get one major per document\n  },\n  {\n    $lookup: {\n      from: \"majors\",\n      localField: \"majors\",\n      foreignField: \"_id\",\n      as: \"majors_detail\",\n    },\n  },\n  {\n    $unwind: \"$majors_detail\", // unwind to get one major per document\n  },\n  {\n    $group: {\n      _id: \"$_id\",\n      name: { $first: \"$name\" },\n      majors: { $push: \"$majors_detail\" }, // pused major_detail into major associated with a student\n    },\n  },\n\n  {\n    $project: {\n      _id: 1,\n      name: 1,\n      majors: 1,\n    },\n  },\n\n  {\n    $sort: {\n      _id: 1,\n    },\n  },\n]);"}}
{"t":{"$date":"2023-05-02T17:17:04.883Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"majors","coll":"students","arguments":{"options":{},"pipeline":[{"$unwind":"$majors"},{"$lookup":{"from":"majors","localField":"majors","foreignField":"_id","as":"majors_detail"}},{"$unwind":"$majors_detail"},{"$group":{"_id":"$_id","name":{"$first":"$name"},"majors":{"$push":"$majors_detail"}}},{"$project":{"_id":1,"name":1,"majors":1}},{"$sort":{"_id":1}}]}}}
