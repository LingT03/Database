{"t":{"$date":"2023-04-27T16:16:52.763Z"},"s":"I","c":"MONGOSH","id":1000000000,"ctx":"log","msg":"Starting log","attr":{"execPath":"/usr/bin/mongosh","envInfo":{"EDITOR":null,"NODE_OPTIONS":null,"TERM":"xterm"},"version":"1.8.0","distributionKind":"compiled","buildArch":"arm64","buildPlatform":"linux","buildTarget":"linux-arm64","buildTime":"2023-02-28T13:52:16.830Z","gitVersion":"9cf53bc336c79e505cf034bf5e6f3b3b3796cf25","nodeVersion":"v16.19.1","opensslVersion":"1.1.1t+quic","sharedOpenssl":false}}
{"t":{"$date":"2023-04-27T16:16:52.767Z"},"s":"I","c":"MONGOSH","id":1000000048,"ctx":"config","msg":"Loading global configuration file","attr":{"filename":"/etc/mongosh.conf","found":false}}
{"t":{"$date":"2023-04-27T16:16:52.779Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000042,"ctx":"mongosh-connect","msg":"Initiating connection attempt","attr":{"uri":"mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.8.0","driver":{"name":"nodejs|mongosh","version":"5.1.0"},"devtoolsConnectVersion":"1.4.4","host":"127.0.0.1:27017"}}
{"t":{"$date":"2023-04-27T16:16:52.782Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000035,"ctx":"mongosh-connect","msg":"Server heartbeat succeeded","attr":{"connectionId":"127.0.0.1:27017"}}
{"t":{"$date":"2023-04-27T16:16:52.789Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000037,"ctx":"mongosh-connect","msg":"Connection attempt finished"}
{"t":{"$date":"2023-04-27T16:16:52.805Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"644a9ff4444eb2e94a165f8d","userId":null,"telemetryAnonymousId":"644a9ff46b19aedd9fe55fd0","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.8.0","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"6.0.5","node_version":"v16.19.1","mongosh_version":"1.8.0","server_os":"linux","server_arch":"aarch64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","fcv":"6.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2023-04-27T16:16:52.819Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"ping":1}}}}
{"t":{"$date":"2023-04-27T16:16:52.819Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2023-04-27T16:16:52.862Z"},"s":"I","c":"MONGOSH","id":1000000010,"ctx":"shell-api","msg":"Initialized context","attr":{"method":"setCtx","arguments":{}}}
{"t":{"$date":"2023-04-27T16:16:52.865Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show startupWarnings"}}
{"t":{"$date":"2023-04-27T16:16:52.865Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"getLog":"startupWarnings"}}}}
{"t":{"$date":"2023-04-27T16:16:52.866Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2023-04-27T16:16:52.867Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show freeMonitoring"}}
{"t":{"$date":"2023-04-27T16:16:52.867Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"getFreeMonitoringStatus":1}}}}
{"t":{"$date":"2023-04-27T16:16:52.868Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2023-04-27T16:16:52.868Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show automationNotices"}}
{"t":{"$date":"2023-04-27T16:16:52.869Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"hello","class":"Database","db":"test","arguments":{}}}
{"t":{"$date":"2023-04-27T16:16:52.870Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show nonGenuineMongoDBCheck"}}
{"t":{"$date":"2023-04-27T16:16:52.879Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000024,"ctx":"snippets","msg":"Fetching snippet index","attr":{"refreshMode":"allow-cached"}}
{"t":{"$date":"2023-04-27T16:16:52.880Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000019,"ctx":"snippets","msg":"Loaded snippets","attr":{"installdir":"/data/db/.mongodb/mongosh/snippets"}}
{"t":{"$date":"2023-04-27T16:16:52.881Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000028,"ctx":"snippets","msg":"Modifying snippets package.json failed","attr":{"error":"ENOENT: no such file or directory, open '/data/db/.mongodb/mongosh/snippets/package.json'"}}
{"t":{"$date":"2023-04-27T16:16:52.885Z"},"s":"I","c":"MONGOSH","id":1000000002,"ctx":"repl","msg":"Started REPL","attr":{"version":"1.8.0"}}
{"t":{"$date":"2023-04-27T16:16:53.124Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000027,"ctx":"snippets","msg":"Fetching snippet index done"}
{"t":{"$date":"2023-04-27T16:22:25.146Z"},"s":"I","c":"MONGOSH","id":1000000008,"ctx":"shell-api","msg":"Used \"use\" command","attr":{"db":"blog"}}
{"t":{"$date":"2023-04-27T16:22:25.171Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"644a9ff4444eb2e94a165f8d","userId":null,"telemetryAnonymousId":"644a9ff46b19aedd9fe55fd0","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.8.0","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"6.0.5","node_version":"v16.19.1","mongosh_version":"1.8.0","server_os":"linux","server_arch":"aarch64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","fcv":"6.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2023-04-27T16:22:37.905Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"{\n  [\n    {\n      author: \"Sam Mai Tai\",\n      created_at: ISODate(\"2017-11-03T00:00:00Z\"),\n      content:\n        \"The pessimist sees difficulty in every opportunity. The optimist sees the opportunity in every difficulty.\",\n      likes: 12,\n      tags: [\"pessimist\", \"optimist\"],\n    },\n\n    {\n      author: \"Sam Mai Tai\",\n      created_at: ISODate(\"2017-11-03T09:30:00Z\"),\n      content:\n        \"Age is a case of mind over matter. If you don't mind, it doesn't matter.\",\n      likes: 10,\n      tags: [\"age\", \"optimist\"],\n    },\n\n    {\n      author: \"Sam Mai Tai\",\n      created_at: ISODate(\"2017-11-04T00:00:00Z\"),\n      content:\n        \"Failure will never overtake me if my determination to succeed is strong enough.\",\n      likes: 1,\n      tags: [\"optimist\"],\n    },\n\n    {\n      author: \"Morbid Mojito\",\n      created_at: ISODate(\"2017-11-04T00:00:00Z\"),\n      content: \"Only I can change my life. No one can do it for me.\",\n      tags: [\"life\"],\n    },\n\n    {\n      author: \"Morbid Mojito\",\n      created_at: ISODate(\"2017-11-07T00:00:00Z\"),\n      content:\n        \"Smile in the mirror. Do that every morning and you'll start to see a big difference in your life\",\n      likes: 1,\n      tags: [\"life\", \"optimist\"],\n    },\n  ];\n}"}}
{"t":{"$date":"2023-04-27T16:25:07.583Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show collectino"}}
{"t":{"$date":"2023-04-27T16:25:07.592Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"shell-api","msg":"MongoshInvalidInputError: [COMMON-10001] 'collectino' is not a valid argument for \"show\".","attr":{"stack":"MongoshInvalidInputError: [COMMON-10001] 'collectino' is not a valid argument for \"show\".\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1800477)\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1755603)\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)\n    at Mongo.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1750338)\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1838167)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1755603)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)\n    at ShellApi.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1750338)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)","name":"MongoshInvalidInputError","message":"[COMMON-10001] 'collectino' is not a valid argument for \"show\".","code":"COMMON-10001","scope":"COMMON","metadata":null}}
{"t":{"$date":"2023-04-27T16:25:07.597Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoshInvalidInputError: [COMMON-10001] 'collectino' is not a valid argument for \"show\".","attr":{"name":"MongoshInvalidInputError","code":"COMMON-10001","scope":"COMMON","metadata":null,"message":"[COMMON-10001] 'collectino' is not a valid argument for \"show\".","stack":"MongoshInvalidInputError: [COMMON-10001] 'collectino' is not a valid argument for \"show\".\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1800477)\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1755603)\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)\n    at Mongo.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1750338)\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1838167)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1755603)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)\n    at ShellApi.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1750338)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)"}}
{"t":{"$date":"2023-04-27T16:25:13.718Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show collection"}}
{"t":{"$date":"2023-04-27T16:25:13.723Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"shell-api","msg":"MongoshInvalidInputError: [COMMON-10001] 'collection' is not a valid argument for \"show\".","attr":{"stack":"MongoshInvalidInputError: [COMMON-10001] 'collection' is not a valid argument for \"show\".\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1800477)\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1755603)\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)\n    at Mongo.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1750338)\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1838167)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1755603)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)\n    at ShellApi.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1750338)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)","name":"MongoshInvalidInputError","message":"[COMMON-10001] 'collection' is not a valid argument for \"show\".","code":"COMMON-10001","scope":"COMMON","metadata":null}}
{"t":{"$date":"2023-04-27T16:25:13.726Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoshInvalidInputError: [COMMON-10001] 'collection' is not a valid argument for \"show\".","attr":{"name":"MongoshInvalidInputError","code":"COMMON-10001","scope":"COMMON","metadata":null,"message":"[COMMON-10001] 'collection' is not a valid argument for \"show\".","stack":"MongoshInvalidInputError: [COMMON-10001] 'collection' is not a valid argument for \"show\".\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1800477)\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1755603)\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)\n    at Mongo.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1750338)\n    at Mongo.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1838167)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1755603)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)\n    at ShellApi.<anonymous> (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1750338)\n    at ShellApi.show (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1754740)"}}
{"t":{"$date":"2023-04-27T16:25:52.574Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show dbs"}}
{"t":{"$date":"2023-04-27T16:26:21.623Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"getCollectionNames()"}}
{"t":{"$date":"2023-04-27T16:26:21.628Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: getCollectionNames is not defined","attr":{"message":"getCollectionNames is not defined","name":"ReferenceError","stack":"ReferenceError: getCollectionNames is not defined\n    at REPL52:34:9\n    at REPL52:48:5\n    at REPL52:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799948\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799676\n    at node:internal/util:364:7"}}
{"t":{"$date":"2023-04-27T16:26:29.891Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"getCollectionNames(blog)"}}
{"t":{"$date":"2023-04-27T16:26:29.896Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: getCollectionNames is not defined","attr":{"message":"getCollectionNames is not defined","name":"ReferenceError","stack":"ReferenceError: getCollectionNames is not defined\n    at REPL53:34:9\n    at REPL53:48:5\n    at REPL53:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799948\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799676\n    at node:internal/util:364:7"}}
{"t":{"$date":"2023-04-27T16:27:00.155Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.createCollection(\"posts\")"}}
{"t":{"$date":"2023-04-27T16:27:00.161Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"createCollection","class":"Database","db":"blog","arguments":{"name":"posts","options":{}}}}
{"t":{"$date":"2023-04-27T16:27:32.878Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.insertOne(blog)"}}
{"t":{"$date":"2023-04-27T16:27:32.882Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: blog is not defined","attr":{"message":"blog is not defined","name":"ReferenceError","stack":"ReferenceError: blog is not defined\n    at REPL55:34:224\n    at REPL55:48:5\n    at REPL55:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799948\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799676\n    at node:internal/util:364:7"}}
{"t":{"$date":"2023-04-27T16:28:08.789Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"{\n  [\n    {\n      author: \"Sam Mai Tai\",\n      created_at: ISODate(\"2017-11-03T00:00:00Z\"),\n      content:\n        \"The pessimist sees difficulty in every opportunity. The optimist sees the opportunity in every difficulty.\",\n      likes: 12,\n      tags: [\"pessimist\", \"optimist\"],\n    },\n\n    {\n      author: \"Sam Mai Tai\",\n      created_at: ISODate(\"2017-11-03T09:30:00Z\"),\n      content:\n        \"Age is a case of mind over matter. If you don't mind, it doesn't matter.\",\n      likes: 10,\n      tags: [\"age\", \"optimist\"],\n    },\n\n    {\n      author: \"Sam Mai Tai\",\n      created_at: ISODate(\"2017-11-04T00:00:00Z\"),\n      content:\n        \"Failure will never overtake me if my determination to succeed is strong enough.\",\n      likes: 1,\n      tags: [\"optimist\"],\n    },\n\n    {\n      author: \"Morbid Mojito\",\n      created_at: ISODate(\"2017-11-04T00:00:00Z\"),\n      content: \"Only I can change my life. No one can do it for me.\",\n      tags: [\"life\"],\n    },\n\n    {\n      author: \"Morbid Mojito\",\n      created_at: ISODate(\"2017-11-07T00:00:00Z\"),\n      content:\n        \"Smile in the mirror. Do that every morning and you'll start to see a big difference in your life\",\n      likes: 1,\n      tags: [\"life\", \"optimist\"],\n    },\n  ];\n}"}}
{"t":{"$date":"2023-04-27T16:29:02.523Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token (1:20)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mposts\u001b[33m.\u001b[39minsertOne({)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":20,"index":20},"pos":20,"message":"Unexpected token (1:20)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mposts\u001b[33m.\u001b[39minsertOne({)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token (1:20)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mposts\u001b[33m.\u001b[39minsertOne({)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n"}}
{"t":{"$date":"2023-04-27T16:29:02.674Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"[\n    {\n      author: \"Sam Mai Tai\",\n      created_at: ISODate(\"2017-11-03T00:00:00Z\"),\n      content:\n        \"The pessimist sees difficulty in every opportunity. The optimist sees the opportunity in every difficulty.\",\n      likes: 12,\n      tags: [\"pessimist\", \"optimist\"],\n    },\n\n    {\n      author: \"Sam Mai Tai\",\n      created_at: ISODate(\"2017-11-03T09:30:00Z\"),\n      content:\n        \"Age is a case of mind over matter. If you don't mind, it doesn't matter.\",\n      likes: 10,\n      tags: [\"age\", \"optimist\"],\n    },\n\n    {\n      author: \"Sam Mai Tai\",\n      created_at: ISODate(\"2017-11-04T00:00:00Z\"),\n      content:\n        \"Failure will never overtake me if my determination to succeed is strong enough.\",\n      likes: 1,\n      tags: [\"optimist\"],\n    },\n\n    {\n      author: \"Morbid Mojito\",\n      created_at: ISODate(\"2017-11-04T00:00:00Z\"),\n      content: \"Only I can change my life. No one can do it for me.\",\n      tags: [\"life\"],\n    },\n\n    {\n      author: \"Morbid Mojito\",\n      created_at: ISODate(\"2017-11-07T00:00:00Z\"),\n      content:\n        \"Smile in the mirror. Do that every morning and you'll start to see a big difference in your life\",\n      likes: 1,\n      tags: [\"life\", \"optimist\"],\n    },\n  ];"}}
{"t":{"$date":"2023-04-27T16:29:06.956Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token (1:0)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":0,"index":0},"pos":0,"message":"Unexpected token (1:0)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token (1:0)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n"}}
{"t":{"$date":"2023-04-27T16:29:29.153Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.post.find()"}}
{"t":{"$date":"2023-04-27T16:29:29.158Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"post","arguments":{"options":{}}}}
{"t":{"$date":"2023-04-27T16:29:31.637Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":";"}}
{"t":{"$date":"2023-04-27T16:29:52.355Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.post.find()"}}
{"t":{"$date":"2023-04-27T16:29:52.360Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"post","arguments":{"options":{}}}}
{"t":{"$date":"2023-04-27T16:30:04.104Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.find()"}}
{"t":{"$date":"2023-04-27T16:30:04.110Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"posts","arguments":{"options":{}}}}
{"t":{"$date":"2023-04-27T16:30:57.565Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"getCollectionNames(blog.js)"}}
{"t":{"$date":"2023-04-27T16:30:57.571Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: getCollectionNames is not defined","attr":{"message":"getCollectionNames is not defined","name":"ReferenceError","stack":"ReferenceError: getCollectionNames is not defined\n    at REPL152:34:9\n    at REPL152:48:5\n    at REPL152:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799948\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799676\n    at node:internal/util:364:7"}}
{"t":{"$date":"2023-04-27T16:34:43.784Z"},"s":"I","c":"MONGOSH","id":1000000009,"ctx":"shell-api","msg":"Used \"show\" command","attr":{"method":"show collections"}}
{"t":{"$date":"2023-04-27T16:34:57.136Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token, expected \"]\" (11:5)\n\n\u001b[0m \u001b[90m  9 |\u001b[39m       likes\u001b[33m:\u001b[39m \u001b[35m12\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m       tags\u001b[33m:\u001b[39m [\u001b[32m\"pessimist\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"optimist\"\u001b[39m]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m     }\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":11,"column":5,"index":307},"pos":307,"message":"Unexpected token, expected \"]\" (11:5)\n\n\u001b[0m \u001b[90m  9 |\u001b[39m       likes\u001b[33m:\u001b[39m \u001b[35m12\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m       tags\u001b[33m:\u001b[39m [\u001b[32m\"pessimist\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"optimist\"\u001b[39m]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m     }\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token, expected \"]\" (11:5)\n\n\u001b[0m \u001b[90m  9 |\u001b[39m       likes\u001b[33m:\u001b[39m \u001b[35m12\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m       tags\u001b[33m:\u001b[39m [\u001b[32m\"pessimist\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"optimist\"\u001b[39m]\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m     }\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m\n"}}
{"t":{"$date":"2023-04-27T16:34:57.152Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":""}}
{"t":{"$date":"2023-04-27T16:34:57.221Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Missing semicolon. (3:16)\n\n\u001b[0m \u001b[90m 1 |\u001b[39m     {\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m       author\u001b[33m:\u001b[39m \u001b[32m\"Sam Mai Tai\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 3 |\u001b[39m       created_at\u001b[33m:\u001b[39m \u001b[33mISODate\u001b[39m(\u001b[32m\"2017-11-03T09:30:00Z\"\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 |\u001b[39m       content\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m         \u001b[32m\"Age is a case of mind over matter. If you don't mind, it doesn't matter.\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m       likes\u001b[33m:\u001b[39m \u001b[35m10\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":3,"column":16,"index":51},"pos":51,"message":"Missing semicolon. (3:16)\n\n\u001b[0m \u001b[90m 1 |\u001b[39m     {\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m       author\u001b[33m:\u001b[39m \u001b[32m\"Sam Mai Tai\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 3 |\u001b[39m       created_at\u001b[33m:\u001b[39m \u001b[33mISODate\u001b[39m(\u001b[32m\"2017-11-03T09:30:00Z\"\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 |\u001b[39m       content\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m         \u001b[32m\"Age is a case of mind over matter. If you don't mind, it doesn't matter.\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m       likes\u001b[33m:\u001b[39m \u001b[35m10\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Missing semicolon. (3:16)\n\n\u001b[0m \u001b[90m 1 |\u001b[39m     {\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m       author\u001b[33m:\u001b[39m \u001b[32m\"Sam Mai Tai\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 3 |\u001b[39m       created_at\u001b[33m:\u001b[39m \u001b[33mISODate\u001b[39m(\u001b[32m\"2017-11-03T09:30:00Z\"\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 |\u001b[39m       content\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m         \u001b[32m\"Age is a case of mind over matter. If you don't mind, it doesn't matter.\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m       likes\u001b[33m:\u001b[39m \u001b[35m10\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n"}}
{"t":{"$date":"2023-04-27T16:38:31.649Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.insertMany([\n    {\n      author: \"Sam Mai Tai\",\n      created_at: ISODate(\"2017-11-03T00:00:00Z\"),\n      content:\n        \"The pessimist sees difficulty in every opportunity. The optimist sees the opportunity in every difficulty.\",\n      likes: 12,\n      tags: [\"pessimist\", \"optimist\"],\n    },\n    {\n      author: \"Sam Mai Tai\",\n      created_at: ISODate(\"2017-11-03T09:30:00Z\"),\n      content:\n        \"Age is a case of mind over matter. If you don't mind, it doesn't matter.\",\n      likes: 10,\n      tags: [\"age\", \"optimist\"],\n    },\n    {\n      author: \"Sam Mai Tai\",\n      created_at: ISODate(\"2017-11-04T00:00:00Z\"),\n      content:\n        \"Failure will never overtake me if my determination to succeed is strong enough.\",\n      likes: 1,\n      tags: [\"optimist\"],\n    },\n    {\n      author: \"Morbid Mojito\",\n      created_at: ISODate(\"2017-11-04T00:00:00Z\"),\n      content: \"Only I can change my life. No one can do it for me.\",\n      tags: [\"life\"],\n    },\n    {\n      author: \"Morbid Mojito\",\n      created_at: ISODate(\"2017-11-07T00:00:00Z\"),\n      content:\n        \"Smile in the mirror. Do that every morning and you'll start to see a big difference in your life\",\n      likes: 1,\n      tags: [\"life\", \"optimist\"],\n    }\n  ]);"}}
{"t":{"$date":"2023-04-27T16:38:31.659Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insertMany","class":"Collection","db":"blog","coll":"posts","arguments":{"options":{}}}}
{"t":{"$date":"2023-04-27T16:38:49.275Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.show();"}}
{"t":{"$date":"2023-04-27T16:38:49.282Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getCollection","class":"Database","db":"blog","arguments":{"coll":"posts.show"}}}
{"t":{"$date":"2023-04-27T16:38:49.284Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.posts.show is not a function","attr":{"message":"db.posts.show is not a function","name":"TypeError","stack":"TypeError: db.posts.show is not a function\n    at REPL240:34:178\n    at REPL240:48:5\n    at REPL240:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799948\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799676\n    at node:internal/util:364:7"}}
{"t":{"$date":"2023-04-27T16:38:49.524Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":""}}
{"t":{"$date":"2023-04-27T16:39:17.984Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.find();"}}
{"t":{"$date":"2023-04-27T16:39:17.988Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"posts","arguments":{"options":{}}}}
{"t":{"$date":"2023-04-27T16:39:19.739Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.find();"}}
{"t":{"$date":"2023-04-27T16:39:19.743Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"posts","arguments":{"options":{}}}}
{"t":{"$date":"2023-04-27T16:39:56.367Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.post.find(\n    author = \"Sam Mai Tai\"\n  );"}}
{"t":{"$date":"2023-04-27T16:39:56.374Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"post","arguments":{"query":"Sam Mai Tai","options":{}}}}
{"t":{"$date":"2023-04-27T16:39:56.383Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoInvalidArgumentError: Query filter must be a plain object or ObjectId","attr":{"message":"Query filter must be a plain object or ObjectId","name":"MongoInvalidArgumentError","stack":"MongoInvalidArgumentError: Query filter must be a plain object or ObjectId\n    at new FindOperation (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1413279)\n    at FindCursor._initialize (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1336776)\n    at FindCursor.[kInit] (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1329279)\n    at P (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1330035)\n    at node:internal/util:364:7\n    at new Promise (<anonymous>)\n    at P (node:internal/util:350:12)\n    at FindCursor.tryNext (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1327443)\n    at Cursor.tryNext (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1668678)\n    at Cursor.tryNext (/tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:3902:1755603)"}}
{"t":{"$date":"2023-04-27T16:40:08.635Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.find({author: \"Sam Mai Tai\"});"}}
{"t":{"$date":"2023-04-27T16:40:08.638Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"posts","arguments":{"query":{"author":"Sam Mai Tai"},"options":{}}}}
{"t":{"$date":"2023-04-27T16:40:34.604Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.find({author: \"Sam Mai Tai\"}, {content: 1});"}}
{"t":{"$date":"2023-04-27T16:40:34.608Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"posts","arguments":{"query":{"author":"Sam Mai Tai"},"options":{"projection":{"content":1}}}}}
{"t":{"$date":"2023-04-27T16:56:25.674Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"DB.POSTS.FIND();"}}
{"t":{"$date":"2023-04-27T16:56:25.679Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: DB is not defined","attr":{"message":"DB is not defined","name":"ReferenceError","stack":"ReferenceError: DB is not defined\n    at REPL249:34:9\n    at REPL249:48:5\n    at REPL249:53:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799948\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799676\n    at node:internal/util:364:7"}}
{"t":{"$date":"2023-04-27T17:09:54.672Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.post.$regex({ content: \"you\" });"}}
{"t":{"$date":"2023-04-27T17:09:54.678Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"TypeError: db.post.$regex is not a function","attr":{"message":"db.post.$regex is not a function","name":"TypeError","stack":"TypeError: db.post.$regex is not a function\n    at REPL250:34:186\n    at REPL250:50:5\n    at REPL250:55:3\n    at Script.runInContext (node:vm:141:12)\n    at PrettyREPLServer.defaultEval (node:repl:574:29)\n    at bound (node:domain:433:15)\n    at PrettyREPLServer.runBound (node:domain:444:12)\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799948\n    at /tmp/m/boxednode/mongosh/node-v16.19.1/out/Release/node:1917:799676\n    at node:internal/util:364:7"}}
{"t":{"$date":"2023-04-27T17:11:21.026Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.find({ content: { $regex: \"you\" } });"}}
{"t":{"$date":"2023-04-27T17:11:21.029Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"posts","arguments":{"query":{"content":{"$regex":"you"}},"options":{}}}}
{"t":{"$date":"2023-04-27T17:11:21.311Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":""}}
{"t":{"$date":"2023-04-27T17:12:34.553Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.find({ author: { $regex: \"[oO]$\" } });"}}
{"t":{"$date":"2023-04-27T17:12:34.557Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"posts","arguments":{"query":{"author":{"$regex":"[oO]$"}},"options":{}}}}
{"t":{"$date":"2023-04-27T17:13:28.637Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.find({ tags: \"optimist\" });"}}
{"t":{"$date":"2023-04-27T17:13:28.643Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"posts","arguments":{"query":{"tags":"optimist"},"options":{}}}}
{"t":{"$date":"2023-04-27T17:13:35.914Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.find({ author: { $regex: \"[oO]$\" } });"}}
{"t":{"$date":"2023-04-27T17:13:35.918Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"posts","arguments":{"query":{"author":{"$regex":"[oO]$"}},"options":{}}}}
{"t":{"$date":"2023-04-27T17:16:23.792Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.posts.find({ tags: { $size: 1 } });"}}
{"t":{"$date":"2023-04-27T17:16:23.796Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"blog","coll":"posts","arguments":{"query":{"tags":{"$size":1}},"options":{}}}}
